---
title: "Tune reproduction sensitivity"
---

## Introduction

In the tutorial x of week 1 we briefly looked at how density dependence of reproduction, or the so called reproduction level, can influence how species react to changes in mortality, such as from fishing. It might be good if you go back to this tutorial and remind yourself about two parameters that will affect reproduction level. They are $R_max$ and $erepro$. $R_max$ sets the maximum amount of eggs or larvae (individuals in the first size class) that can recruit in the system, where $erepro$ defines the slope of how egg production scales with the energy invested in reproduction (which depends on the spawning stock biomass and their energy intake). 

Important! 
What is recruitment? 

In fisheries, the term 'recruitment' usuallyu refers to the numbers of fish that recruit into fishery, which will depend on egg production, early density dependence, growth, early mortality and gear selectivity. In mizer we often use the term 'recruitment' to describe the number of individuals that enter the first size class in the model. This number will depend on the energy invested into reproduction and density dependence parameters $R_max$ and $erepro$. So please be aware of this difference, and remember that here recruitment means numbers in the first size class. 

When we built our models in week 2 we were not concerned about the reproduction level and we kept the recruitment independent from energy invested into reproduction. Now we need to relax this assumption. The steady() function used in week 2 didn't care about setting realistic reproduction levels for the species. It is important to understand that by modifying $R_max$ and $erepro$ we can change the reproduction level - point along the density dependence curve that the species is - without changing biomass at steady state. 






So let's look first at the reproduction levels of our species 




Jacobsen et al. Fish Fish paper on LME and tuning appendix - suggest physiological recruitment versus actual recruitment (RDI/RDD) = 100 for many species 

Figure on how recruitment and biomass change as F increases 

Fmsy - fishing mortality at maximum sustainable yield. Above this level recruitment starts getting affected, below it recruitment stays the same 



The goal of this tutorial is to explore how the species in your model respond to fishing, to ensure that the reproduction parameters are reasonable when you incorporate fishing dynamics into your model.

First, we will install the same packages we used last week. Additionally, we will use the mizerHowTo package which contains some handy functions for this week's workshops.


```{r}
#| message: false
remotes::install_github("sizespectrum/mizerExperimental", ref = "tuneMR")
remotes::install_github("sizespectrum/mizerMR")
source("experiment/getFCurves.R")
library(mizerExperimental)
library(mizerMR)
library(tidyverse)
```


```{r}
cur_model_coarse <- readParams("build/cur_model_coarse.rds")
cur_model_refined <- readParams("build/cur_model_refined.rds")

#run to new steady level 
cm <- cur_model_coarse |> steady()


## let's look at reproduction levels of our steady state model 
getReproductionLevel(cm)

#for some species it is very low and if we changed fishing even a bit species might crash

sim_1 <- project(cm, effort = 0.3, t_max = 200, dt = 0.1)
plot(sim_1)
sim_2 <- project(cm, effort = 0.6, t_max = 200, dt = 0.1)
plot(sim_2)
```

The fact that species cannot sustain higher fishing mortality might be due to their biology, but more likely due to the fact that we did not set reproduction level properly. We will now explore sensitivity to fishing one species at a time and assess what level of reproduction or recruitment density dependence might be reasonable

However, for this we will be dealing with a more theoretical system and we will set gear parameters so that fishing selectivity for all species is identical in respect to their maximum size. Following simulations in fig xx from Andersen we set L50 of the gear to 5% of W_inf (and L25 to 4% of W_inf). 

Note: one may have data from a specific system about changes in species biomass in response to certain fishing pressure and selectivity. If such data is available it would make sense to set parameters accordingly. We will set a generic fishing selectivity. 

```{r}
#calculate length of maturation 
species_params(cm)$L_mat = (species_params(cm)$w_mat/species_params(cm)$a)^(1/species_params(cm)$b)
species_params(cm)$L_25mat = (species_params(cm)$w_mat25/species_params(cm)$a)^(1/species_params(cm)$b)

#calculate length at 5% Wmax and 4% Wmax
species_params(cm)$L_05Wmax = ((0.05*species_params(cm)$w_inf)/species_params(cm)$a)^(1/species_params(cm)$b)
species_params(cm)$L_04Wmax = ((0.04*species_params(cm)$w_inf)/species_params(cm)$a)^(1/species_params(cm)$b)


#set gear parameters so that species are fished at the same relative sizes
#set fishing at Lmat and Lmat25
gp <- gear_params(cm)
gp$l50 <- species_params(cm)$L_mat
gp$l25 <- species_params(cm)$L_25mat
gear_params(cm) <- gp
gear_params(cm)

## or we follow Ken's figure and set them at 0.05Wmax
gp2 <- gear_params(cm)
gp2$l50 <- species_params(cm)$L_05Wmax
gp2$l25 <- species_params(cm)$L_04Wmax
gear_params(cm) <- gp2
gear_params(cm)

#as we change gear parameters we need to bring the model to steady again 
cm <- steady(cm)
```

## Understanding different aspects of recruitment and reproduction 

Rmax - sets the maximum number of recruits that can be set. 
RDI - is the density independent reproduction and it will depend on the energy invested to reproduction and erepro value 
RDD - is reproduction after applying the density dependence equation 
Different ratios could be informative to understand system behaviour 


```{r}
#what is the ratio of xx
getRDD(cm)/getRDI(cm)

#how close the RDD is to Rmax 
getRDD(cm)/species_params(cm)$R_max

#what is the reproduction level 
getReproductionLevel(cm)

#Now let's look again at what happens if we increase fishing to our system 
sim_3 <- project(cm, effort = 0.6, t_max = 200, dt = 0.1)
plot(sim_3)

#which species are crashing due to higher fishing? 
plotlyBiomass(sim_3)
#what is their reproduction level? 
getReproductionLevel(cm)

#these are large species that have very low reproduction levels - or in other words very high linear dependence of recruitment to SS. If SSB goes down a bit, reruitment will also go down. 

```

Now we will try to set more realistic reproduction levels, and move species to a more realistic position in the recruitment curve. 
There is a general assumption that large bodies species have higher reproduction levels (closer to the maximum recruitment levels) than small species. This is because large species produce so many eggs that even a few individuals will quickly fill up the eggs to the maximum possible level. Small species produce a lot fewer eggs and they don't 'waste' them quite as much. This is one of the possible reasons why we see large biomass fluctuations in stocks of small bodied species - their recruitment responds strongly to changes in biomass, but due to their fast growth rates they recover quickly (Andersen book chapter x). We will set the initial reproduction levels to relate to maximum body size 


```{r}

#Now we will explore how one species responds to fishing at different reproduction levels 
#for this we will set reproduction level 
species_params(cm)$w_inf
rep_level <- c(0.3, 0.5, 0.95, 0.9, 0.9, 0.9, 0.85, 0.9, 0.9, 0.95)

cm_rep <- setBevertonHolt(cm, reproduction_level = rep_level)
#check that it worked
getReproductionLevel(cm_rep)

#and now run the simulation with higher effort 
sim_cm_rep <- project(cm_rep, effort = 0.6, t_max = 200, dt = 0.1)
plot(sim_cm_rep)
#now species are more resilient to fishing. Can they sustain much higher fishing levels?     
    
sim_cm_rep <- project(cm_rep, effort = 1, t_max = 200, dt = 0.1)
plot(sim_cm_rep)
plotlyBiomass(sim_cm_rep)    

#how much did the biomass change? 
getBiomass(sim_cm_rep)[201,]/getBiomass(sim_cm_rep)[1,]
```

we now have a problem that we do not know how one specific species responds to fishing because we change fishing on all species. So while the largest predators (pikeperch, predator_fish, burbot) decrease, other species (perch, breams, roach, carasius) increase, despite much higher fishing on them. So we need to fish them one at time, while keeping other species fixed 

```{r}
test <- plotFCurves(cm_rep, species = "breams", F_max = 1, no_steps = 20)
#we can see that with this high reproduction level (0.95) bream can sustain a lot of fishing 
plot(test) 
#the yield curve is quite flat and suggest that we can easily fish bream at F=1 

#we save the data 
breamData <- as.data.frame(test$data)
breamData$repLevel <- 0.95

#what was the reproduction level of breams again? 
getReproductionLevel(cm_rep)
gear_params(cm_rep)$catchability

#let's look at six reproduction values and the resulting biomass change and yield curves. We will only change reproduction level of bream and mortality of bream - other species stay the same 
#array of reproduction level values we want to explore 
rep_change <- seq(from = 0.74, to = 0.99, by = 0.05)

for (i in 1:length(rep_change)) {

rep_level[3] <- rep_change[i]
rep_level
cm_rep.t <- setBevertonHolt(cm, reproduction_level = rep_level)
test.t <- plotFCurves(cm_rep.t, species = "breams", F_max = 1, no_steps = 20)
plot(test.t)
data.t <- test.t$data
data.t$repLevel <- rep_change[i]
#how do I bind these bloody dataframes??!
bream_data <- rbind(bream_data, data.t)
}

#and so on. We could plot only yield curves from the dataframe, or only biomass change. How to chose among them we don't really know

```

Alternatively we set erepro same for all species as Ken and Gustav suggest 

```{r}

cm001 <- setBevertonHolt(cm, erepro = 0.001)
#or should it be erepro = 0.01?
cm001 <- setBevertonHolt(cm, erepro = 0.01)

#what is the ratio of xx
getRDD(cm001)/getRDI(cm001)

#how close the RDD is to Rmax 
getRDD(cm001)/species_params(cm001)$R_max

#what is the reproduction level 
getReproductionLevel(cm001)

#can they sustain fishing? I suspect so, since their reproduction level is almost 1
sim_cm001 <- project(cm001, effort = 0.6, t_max = 200, dt = 0.1)
plot(sim_cm001)

#we fish with really high fishing mortality but almost nothing changes. Not sure this makes sense 
getBiomass(sim_cm001)[201,]/getBiomass(sim_cm001)[1,]

```


# END OF ASTA's attempts for now. I am work on details below 


```{r}


cm1 <- setBevertonHolt(cur_model_coarse, reproduction_level = rep_level)
sim_cm1 <- project(cm1, effort = 0.05, t_max = 200, dt = 0.1)
plot(sim_cm1)

plotResourceLevel(cm2)
cm2 <- steady(cur_model_coarse)


#just to make we understand 
1 - getRDD(cm2)/getRDI(cm2)


## Now we want to change reproduction level of one species only (so we don't change other things at once) and explore its effect on fishing. It is probably best to do it in a loop 







cur_model <- readRDS("build/cur_model_refined.rds") |>
    steady()

cur_model <- setBevertonHolt(cur_model, reproduction_level = 0.2)
repr02 <- plotFCurves(cur_model, species = "breams", F_max = 0.5, no_steps = 20)

cur_model <- setBevertonHolt(cur_model, reproduction_level = 0.5)
repr05 <- plotFCurves(cur_model, species = "breams", F_max = 0.5, no_steps = 20)

plot(repr05)

cur_model <- setBevertonHolt(cur_model, reproduction_level = 0.5)
plotFCurves(cur_model, species = "predator_fish", F_max = 0.5, no_steps = 20)

F_range <- c(seq(0, 0.3, 0.02), seq(0.3, 1, 0.1))
plotFCurves(cur_model, species = "predator_fish", F_range = F_range)

gear_params(cur_model)






experiment/explore_F_curves.R


reproduction_level = 1 - RDD/RDI


```



```{r,echo=FALSE,message=FALSE}
remotes::install_github("sizespectrum/mizerExperimental")
library(mizerExperimental)
remotes::install_github("sizespectrum/mizerMR")
library(mizerMR)
remotes::install_github("sizespectrum/mizerHowTo")
library(mizerHowTo)
library(tidyverse)
source("use/helper_functions.R")
```







We will start with a new example model, a preliminary model for the Heard and McDonald Islands Patagonian toothfish longline fishery. While this is not a coastal or inland fishery, it is relatively data poor.

The model has been calibrated using time-averaged data to achieve coexistence and a steady state. This followed a similar approach as the one you used last week. Feel free to use this model, the Curonian Lagoon model, or your own model in the scenarios you develop later on.

First, let's read in the param object for this model, which contains the steady state information. The file is called *params10.rmd*, showing there was already an iterative process involved with checking, refining , re-calibrating and re-checking the model, using time-averaged biomass data and the diagnostic plots below.

```{r,message=FALSE}
sim <- readRDS("use/toothfish/params10.RDS")
params <- sim@params
plotBiomassObservedVsModelCustom(params,ratio = T)
plotGrowthCurves(sim,species_panel = T)
plotlySpectra(sim, power = 2, total = TRUE)
plotDiet2(sim)
```

This model is focussed on Patagonian toothfish and key prey species in the longline fishery.

For this model, we had the following main criteria for our project:

-   Modelled biomasses were within +/- 10-20% of the observed biomasses.

-   Unfished normalised biomass size spectrum slope that is negative and close to -1

-   Growth curves approximated the von Bertalanffy growth curves for each species.

-   Toothfish diet captured dietary changes with body size and became more piscivorous at larger sizes.

-   Recruitment parameters ensured single-species yield curves were dome-shaped, as expected by theory.

-   The modeled catches through time captured the trends in the reported catches through time.

We can see from these plots that we still have more work to do with refining the model. The size at age for some species seem much higher than the empirical parameters, feeding level of near satiation for all species and the biomass of some species is much higher than the data. However size-at-age data are typically highly variable. So, let's set some of those issues aside for now.

The last two of the criteria above require examining how the system reacts to changes in fishing. In the next tutorial we will look at changes though time. Here, we will examine how the reproduction parameters produce reasonable yield curves. How do we do this?

First, let's take a look at how fishing is set up in this model.

```{r}
gear_params(params)
```

Currently we can see there is one gear - *longline* - which has a knife_edge selectivity function that starts fishing at very large sizes of toothfish only (*knife_edge_size*=2722 g). The size selectivity was derived from the length distribution of catches from the long-line fisheries data. If your model does not yet include fishing, you can set up your own fishing gear using the *gear_params()* function and by following the example [here](https://sizespectrum.org/mizer/reference/setFishing.html).

We can see that the *initial_effort* has been set to 1 and the *catchability* has been set to a very low number: 7e-07. This shows the model has been calibrated with a very low level of fishing mortality.

### Tuning fishing

As mentioned before the calibrated reproduction parameters affect how species respond to fishing intensity. To get an idea on how the model has been calibrated in terms of reproduction, let's check the reproduction level.

```{r,message=FALSE}
reproduction_level <- getReproductionLevel(params)
reproduction_level

species_params(params)[, c("erepro", "R_max")]

```

We can see that the erepro and R_max values have been estimated. Let's see how close the model catches are form the observed.

```{r,message=FALSE}
plotYieldObservedVsModel(params, ratio=T)
```

The modeled yields looks pretty close to the observed.

Now, let's take a look at how this combination of parameters influences how toothfish respond to different levels of fishing. These are not temporal dynamics with fishing changing through time yet, each level run at steady state.

```{r,message=FALSE}
plotYieldVsF(params,species="D.ele",no_steps=50,F_max=2)
# Fmsy around 0.4 for toothfish

```

Next let's see what happens if we adjust the reproduction parameters. If you would like to read further about this step see Gustav's blogpost [here](https://blog.mizer.sizespectrum.org/posts/2021-08-03-density-dependence-in-reproduction/).

```{r}
params2 <- setBevertonHolt(params, reproduction_level = 0.85)

plotBevertonHolt2(params, params2, "D.ele")

sim2 <- project(params2, t_max = 20)
plotBiomass(sim2)


plotYieldVsF(params,species="D.ele",no_steps=50,F_max=2)
plotYieldVsF(params2,species="D.ele",no_steps=50,F_max=2)


```

This shows that altering the level of density-dependence in recruitment affects how sensitive toothfish (D.ele for short) are to fishing. The first model would enable toothfish to sustain (at equilbrium) much higher levels of fishing before it collapses.

### Exercise

Explore changes in reproduction level using your model (or the curonian lagoon model). How does changing the reproduction level affect how closely your modeled biomasses and catches match the observations?

## Comparing ecosystem states: effects of fishing relative to an unfished state

To be able to assess the wider ecosystem impacts of fishing in the community we need to understand how changes compare to an unfished state. We can use the above model unfished steady state with effort = 0 to do this combined with some functions to calculate ecological indicators.

Let's compare the current size spectra (with fishing) to the unfished size spectra to assess whether there is any evidence of a size-structured trophic cascade due to fishing.

```{r , code_folding=TRUE, eval = T, echo = T, warning=F}
sim0 <- projectToSteady(params, effort = 0, return_sim = TRUE, t_max = 200)
sim <- projectToSteady(params, effort = 1, return_sim = TRUE, t_max = 200)
plot_relative_biomass(sim0, sim)
```

Here we can see the effect of the reduction in large sized individuals of heavily fished species on the other sizes and species in the model, relative to the unfished steady state.

The abundance of some (but not all) of the smaller to medium sizes of prey are a lot higher when their larger predators are removed (note the logarithmic scale). Sprat looks to be much lower.

We can do the same with Biomass to see when, if any, of the species collapse. For simplicity, we use \< 0.1 of B/B_unfished as a proxy for a reference point for population collapse. We can add other reference points to this kind of plot, for example a simple rule of thumb for B_msy could be 0.5\*B_unfished.

```{r,code_folding=TRUE, eval = T, echo = F, warning=F}
# collect the biomasses from unfish and calcualte the relative change
B0 <- getBiomass(sim0)[2,]
Brel <- melt(sweep(getBiomass(sim), 2, B0, "/")[2,])
ggplot(log10(Brel), aes(x = row.names(Brel), y = value)) +
  geom_bar(stat = "identity",
           show.legend = FALSE) + # Remove the legend
  xlab("Group") +
  ylab("Proportion of Unfished Biomass") 

B0 <- getBiomass(sim0)
Brel <- melt(sweep(getBiomass(sim), 2, B0, "/"))
```

We can see there is very low impact on the biomass of each group, due to the very small rates of fishing mortality being inflicted on toothfish.

#### Exercise

How do the biomasses change under your scenarios of fishing mortality when the reproduction level is lowered?

### Summary
