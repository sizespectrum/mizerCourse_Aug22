{
  "hash": "7cc35fcd1b6931aebc4b1218e4ee0140",
  "result": {
    "markdown": "---\ntitle: \"Week 1: Understand size-spectrum modelling\"\n---\n\n\nYour goal in this first week of the course is to gain a thorough understanding of size spectra and their dynamics. This means that at the end of the week you will understand the parameters that shape the size spectra and how size spectra respond to changes. You will have a feel for how size-spectrum dynamics is different from usual single-species age-based dynamics.\n\nIt is worth spending an entire week on building this understanding, because it will enable you to build more reliable models in the second week and to appropriately explore the model predictions in the third week.\n\n## Guest lecture by Ken Andersen\n\nIn the following video Ken Andersen introduces many of the concepts that we will be discussing in this course. However don't feel that you have to take it all in at once. We will come back to these topics during the course where we hope to make them concrete by working hands-on with mizer.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_c457083b648be24b852b7d22727c7f5d'}\n::: {.cell-output-display}\n```{=html}\n<div class=\"vembedr\" align=\"center\">\n<div class=\"vembedr-rounded\" style=\"border-radius: 10px;\">\n<iframe src=\"https://www.youtube.com/embed/_AeywguOA0o\" width=\"533\" height=\"300\" frameborder=\"0\" allowfullscreen=\"\" data-external=\"1\"></iframe>\n</div>\n</div>\n```\n:::\n:::\n\n\n## Tutorials\n\nThe material is split into 5 tutorials:\n\n1.  [**Observed size spectra**](observed-size-spectra.qmd)\\\n    Because many of the physiological rates in fish (like growth, mortality, metabolism, reproduction) depend on the size of the individuals, a mizer model needs to keep track of the size distribution of the populations, the so-called size spectra. To get a feel for size spectra, in this first tutorial you will take observational data and make plots of size spectra. There is confusion in the size spectrum literature because there are different ways to represent the size spectra and this tutorial will introduce these, so that you can cut through the confusion.\n\n2.  [**Single-species spectra**](single-species-spectra.qmd)\\\n    At the community level, size spectra tend to look like power laws. But the size spectrum of each individual species making up the community will look different. In this tutorial we will investigate how the shape of the single species spectrum is determined by an interplay of growth and mortality.\n\n3.  [**Predation, growth and mortality**](predation-growth-and-mortality.qmd)\\\n    A particular strength of a mizer model is that growth curves and mortality rates are not fixed externally but are emergent and dependent on the availability of prey and the presence of predators. In this tutorial we explore how predation is modelled in mizer and how it effects growth and mortality.\n\n4.  [**Species interactions**](species-interactions.qmd)\\\n    In a mizer model all the species in the community interact with each other through size-based predation. So any changes in one species' size spectrum affects the size spectra of the other species, which in turn affects that first species. In this tutorial we start investigating some of the effects this has.\n\n5.  [**Dynamics of spectra**](dynamics-of-spectra.qmd)\\\n    In previous tutorials we have concentrated on the steady state of the mizer model, where for each size class and each species, the rate at which individuals grow into the size class balances the rate at which individuals grow out of the size class or die, thus keeping the size spectrum constant. In this tutorial we explore the dynamic that takes place when this balance is changed.\n\n## Worksheets\n\nEach tutorial comes with exercises and a worksheet in which to complete the exercises. These worksheets are contained in a dedicated repository on GitHub to which you will push your work to get feedback. This will work the same way as we discussed in the tutorial [Use Git and GitHub](../prepare/use-git-and-github.qmd). If you did not yet get a chance to work through that tutorial, please do so now before continuing with this week's tutorials.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_70a260b21cd09a4752c71cb69022aa0b'}\n::: {.cell-output-display}\n```{=html}\n<div class=\"vembedr\" align=\"center\">\n<div class=\"vembedr-rounded\" style=\"border-radius: 10px;\">\n<iframe src=\"https://www.youtube.com/embed/igE1mk1DQ6w\" width=\"533\" height=\"300\" frameborder=\"0\" allowfullscreen=\"\" data-external=\"1\"></iframe>\n</div>\n</div>\n```\n:::\n:::\n\n\nTo get your worksheet repository for this week, follow this link:\n\n<https://classroom.github.com/a/5cnr1H7R>\n\nWhile reading through a tutorials in your web browser, you may want to have the accompanying worksheet open in RStudio and occasionally copy and paste code from the tutorial there and possibly modify it to see for yourself what happens. Copying code from the tutorial is made easy because when you hover over a chunk of R code in the tutorial you will see a copy icon appearing that you can click to copy the entire content of that R chunk to your clipboard. You can then create a new R chunk in your worksheet and paste the code into it.  \n\nDo save the worksheet frequently and commit all those experiments of yours to your repository. You never know whether you may not want to revisit some of them later.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/vembedr-0.1.5/css/vembedr.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}