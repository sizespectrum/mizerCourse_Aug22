---
title: "Predation, growth and mortality"
---

As in the previous tutorials, we load the mizer and tidyverse packages and create a single-species model with a power-law background with exponent -2.05.

```{r}
#| message: false
library(mizer)
library(tidyverse)
params <- newSingleSpeciesParams(lambda = 2.05)
```

It is now time to discuss the important issue of predation. It is through predation that the fish obtains the energy it needs to maintain its metabolism, to grow and to invest in reproduction. But also a large proportion of the natural mortality of fish comes from predation by their predators. So it is important how mizer models predation. While you can also read about the details in the description of [the general mizer size-spectrum model](https://sizespectrum.org/mizer/articles/model_description.html), in this tutorial we will approach the topic in a more hands-on experimental fashion, using the mizer package itself to help us build intuition.

## Effect of prey availability

The energy income for a fish comes from predation on its prey. If there is less prey, the fish consumes less and thus its growth rate will decrease. Let us investigate this by artificially removing some prey.

Below we decrease the community spectrum by a factor of 10 in the size range from 1mg to 10mg. We again create a new parameter object to be able to keep the old one around

```{r}
params_starved <- params
size_range <- w_full(params) > 10^-3 & w_full(params) < 10^-2
initialNResource(params_starved)[size_range] <- 
  initialNResource(params)[size_range] / 10
```

That is of course quite a dramatic intervention, and so should allow us to clearly see its effect on the steady-state size distribution of our species.

```{r}
params_starved <- steady(params_starved)
```

We got a warning about unrealistic reproductive efficiency, which we ignore for now because we don't want to discuss reproductive efficiency until the next tutorial.

```{r}
plotSpectra(params_starved, power = 2)
```

The lack of food and the resulting slow-down in growth leads to a traffic jam: a peak in the biomass density and then low density on the other side of the traffic jam. The slow-down occurs at a size that is about a factor of 100 larger than the size at which food is reduced. Why this is we will discuss in the next section. But first we hand over to you to investigate what happens when the prey abundance is increased instead of decreased. Please open the worksheet named "worksheet3-predation-growth-and-mortality.Rmd" in your worksheet repository, where you will find the following exercise:

:::{.callout-caution collapse="false"}
### Exercise 1

Plot the steady state biomass density in our model when the community abundance is increased by a factor of 10 in the size range from 1mg to 10mg.
:::

## How predation is modelled

The easiest case in which to understand predation is to imagine a filter feeding fish, swimming around with its mouth open. Clearly the amount of food it takes in is determined by four things:

-   the density of prey in the water,
-   how much volume of water the fish is able to filter, which will depend on how fast it swims as well as on its gape size.
-   what sizes of prey the fish is able to filter out of the water, which will be limited by its gape size and by how fine its gill rakers are,
-   how fast it can digest the food. If it can filter the prey faster than it can digest, it will have to start letting prey go uneaten.

For a more active hunter the situation will be similar. The rate at which it predates will depend on four things:

-   the density of prey in the water
-   the volume of water that the fish patrols and in which it will be able to seek out its prey. This may depend on things like radius of vision.
-   which of this detected prey the fish is able to catch, which will depend on its mouth size but also on its agility and skill as well as on the defensive mechanisms of the prey.
-   how fast it can digest the food.

Of these four factors, we have of course already been discussing the density of prey. In the next section we will discuss the ability to filter out or catch prey of particular sizes, which we model via the predation kernel. In the section after that we will discuss the search volume and then in the following section the maximum consumption rate.

## The predation kernel

Fish will be particularly good at catching prey in a specific range of sizes, smaller than themselves. This is encoded in the size-spectrum model by the predation kernel. Let us take a look at the predation kernel in our model. We can obtain it with the function `getPredKernel()`.

```{r}
pred_kernel <- getPredKernel(params)
```

This is a large three-dimensional array (predator species x predator size x prey size). We extract the kernel of a predator of size 10g (using that we remember that this is in size class 81)

```{r}
pred_kernel_10 <- pred_kernel[, 81, , drop = FALSE]
```

The `drop = FALSE` option is there to prevent R from dropping any of the array dimensions. We can now plot this as usual

```{r}
ggplot(melt(pred_kernel_10)) +
  geom_line(aes(x = w_prey, y = value)) +
  scale_x_log10()
```

We see that the predator of size 10g likes to feed on prey that is about a factor 100 smaller than itself, but also feeds on other sizes, just with reduced preference. The preferred predator/prey size ratio is determined by the species parameter `beta` and the width of the feeding kernel, i.e., how fussy the predator is regarding their prey size, is determined by the species parameter `sigma`. In our model these have the values

```{r}
select(species_params(params), beta, sigma)
```

Let us change the preferred predator/prey mass ratio from 100 to 1000. As usual, we first create a copy of the parameter object, then we make the change in that copy.

```{r message=FALSE}
params_pk <- params
species_params(params_pk)$beta <- 1000
```

Let's make a plot to see that the predation kernel has indeed changed.

```{r}
getPredKernel(params_pk)[, 81, , drop = FALSE] %>% 
  melt() %>% 
  ggplot() +
  geom_line(aes(x = w_prey, y = value)) +
  scale_x_log10()
```

If we now again reduce the prey in the size range from 1mg to 10mg as before, we now expect this to produce a peak in the biomass spectrum somewhere between 1g and 10g. Let's check.

```{r}
initialNResource(params_pk) <- initialNResource(params_starved)
params_pk <- steady(params_pk)
plotSpectra(params_pk, power = 2)
```

Yes, as expected.

For details of how `beta` and `sigma` parametrise the predation kernel, see <https://sizespectrum.org/mizer/reference/lognormal_pred_kernel.html#details>. For information on how to change the predation kernel, see <https://sizespectrum.org/mizer/reference/setPredKernel.html#setting-predation-kernel>

It is very important not to confuse the prey preference with the diet. Just because a predator might prefer to feed on prey of a particular size if it had free choice does not mean that it actually feeds predominantly on such prey. The actual diet of the fish depends also on the availability of prey. Because smaller prey are more abundant, the realised predator/prey mass ratio in the diet will be smaller than the preferred predator/prey mass ratio. This is particularly important when estimating the predation kernel from stomach data.

:::{.callout-caution collapse="false"}
### Exercise 2

Change the parameters of the predation kernel to `beta = 50` and `sigma = 2` and plot the predation kernel of a predator of size 1g. You should see that the predation kernel is truncated so that the predator never feeds on prey larger than themselves.

Next, plot the steady state arising with this feeding kernel when the prey abundance is artificially reduced by a factor of 10 in the size range between 1mg and 10mg as in previous examples. What do you observe? Are you surprised?
:::

## Search volume

Next we consider the factor that models the volume of water a filter feeder is able to filter in a certain amount of time, or the volume of water a forage fish is able to patrol in a certain amount of time. This is difficult to model from first principles, although people have tried to argue in terms of swimming speeds of fish. We assume that this search volume rate is also an allometric rate. Let $\gamma(w)$ denote this rate for a predator of size $w$. Thus we assume that $$\gamma(w) = \gamma_0\ w^q$$ for some exponent $q$. We know that a fish needs to consume prey at a rate that scales with its body size to the power $p$, with $p$ about $3/4$. We also know that the prey density will be approximately described by the Sheldon power law, i.e., that $N(w) = N_0\ w^{-\lambda}$. A bit of maths then says that $$q = 2 - \lambda + n.$$ This explains the message you got when you created the params object with a certain choice of $\lambda$: mizer chose the search volume exponent automatically according to this formula. In the real world, evolution will have made sure that the fish will have developed a feeding strategy that allows it to cover its metabolic costs, and thus leads to that search volume exponent of $q$. Clearly, filter feeders have taken a very different route to this than forage fish, but the result is the same.

Let us see what effect changing the coefficient $\gamma_0$ in the search volume rate has. Its current value in our model is

```{r}
species_params(params)$gamma
```

We change that to 2000 and find the new steady state.

```{r message=FALSE}
params_new_gamma <- params
species_params(params_new_gamma)$gamma <- 2000
params_new_gamma <- steady(params_new_gamma)
```

We can see the effect in the growth curve of our species. In the original model it looks as follows:

```{r warning=FALSE}
plotGrowthCurves(params)
```

In the modified model it looks like

```{r warning=FALSE}
plotGrowthCurves(params_new_gamma)
```

:::{.callout-caution collapse="false"}
### Exercise 3

What effect will this change in growth rate have on the slope of the juvenile spectrum? Will it be steeper or shallower? Make the plot of the spectrum to see.
:::

## Feeding level

A predator will have a maximum intake rate. It will simply not be able to utilise food at a faster rate than its maximum intake rate. Of course in practice it will not feed at the maximum intake rate because of limited availability of prey. We describe this by the *feeding level* which is the proportion of its maximum intake rate at which the predator is actually taking in prey.

In our simple model this feeding level is constant.

```{r}
plotFeedingLevel(params)
```

In the model with the reduced search volume the feeding level will be lower

```{r}
plotFeedingLevel(params_new_gamma)
```

Our model is taking an allometric form for the maximum intake rate $h(w)$ as a function of predator size $w$: $h(w) = h\ w^n$. The current value of the coefficient $h$ is

```{r}
species_params(params)$h
```

# Mortality

## Predation mortality

Of course growth of the predator is only one aspect of predation. The other is the death of the prey. Growth and mortality are coupled. Increased growth of one class of individuals will necessitate increased death of another. There is no free lunch.

Once we have specified the predation parameters, these parameters determine both the growth of predators but also the mortality rate of prey. So we don't have to introduce new parameters for death from predation.

## External mortality

In addition to mortality caused by predation from other fish, there will be some mortality from other causes. This could be predation from animals that we have not included in our model, like sea birds or mammals, or it could be death from old age (senescent death) or disease. Mizer allows setting of background death with `setExtMort()`.

## Fishing mortality

The cause of mortality that is most under our control is mortality from fishing. We discuss more how fishing is set up in mizer in week 3 of this course when we study the consequences of changes in fishing policy. Here we only look at a simple example: we introduce fishing on our species only for fish above 30 grams. All fish greater than 30 grams will be exposed to the same fishing mortality. We call this kind of fishing selectivity "knife_edge" selectivity. Mizer can deal with more general selectivity curves, like sigmoidal or doubly sigmoidal.

```{r}
params_fishing <- params
species_params(params_fishing)$sel_func <- "knife_edge"
species_params(params_fishing)$knife_edge_size <- 30
```

We also need to specify the fishing effort and can then plot the resulting fishing mortality.

```{r}
params_fishing <- setFishing(params_fishing, initial_effort = 1)
plotFMort(params_fishing)
```

We can now see how fishing affects the size spectrum.

```{r}
params_fishing <- steady(params_fishing)
plotSpectra(params_fishing, power = 2)
```

TODO: put this on the same plot as without fishing.
